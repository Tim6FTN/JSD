import wash_internal

WashScript:
    (
        import_statements*=ImportStatement
        ('use configuration' configuration=[Configuration])?
        open_statement=OpenStatement
        root_expression=Expression
    )
      |
    (
        configuration_definitions*=Configuration
    )
;

ImportStatement:
    'import' importURI=STRING
;

OpenStatement:
    OpenURLStatement | OpenFileStatement | OpenStringStatement
;

OpenURLStatement:
    'open' url=STRING
;

OpenFileStatement:
    'file' file_path=STRING
;

OpenStringStatement:
    'html' html=STRING
;

Configuration:
    'define configuration' name=ID '{'
        ('description' ':' description=STRING)?
        configuration_entries+=ConfigurationEntry
    '}'
;

ConfigurationEntry:
    'option' type=[ConfigurationOption] '{'
        parameters*=ConfigurationParameterValue
    '}'
;

ConfigurationParameterValue:
    parameter=[ConfigurationOptionParameter] ':' value=Value
;

// TODO: Re-check if this value should be moved to internal language definition.
Value:
    PrimitiveValue | ArrayValue
;

PrimitiveValue:
    value=STRING | value=STRICTFLOAT | value=INT | value=BOOL
;

ArrayValue:
    '[' value+=STRING[','] ']' | '[' value+=STRICTFLOAT[','] ']' | '[' value+=INT[','] ']' | '[' value+=BOOL[','] ']'
;

Expression:
    queries+=Query (context_expression=ContextExpression)? '->' result_key=ID            // TODO: Result key optional
;

Query:
    SelectorQuery | DataQuery
;

SelectorQuery:
    CSSSelectorQuery | XPathSelectorQuery
;

CSSSelectorQuery: '?c' query_value=QueryValue;
XPathSelectorQuery: '?x' query_value=QueryValue;

DataQuery: ':' query_value=QueryValue;

QueryValue:
/*
    This regex will capture all characters until one of the following is met:
    - '->'      (result key)
    - '?'       (start of a selector query)
    - ':'       (start of a data query)
    - '{'       (start of a context expression)
    This enables the user to write queries without quotes.
*/
    value=/(.|\n)+?(?=(->|\?|:|{))|[^?:{]*/
;

ContextExpression:
    '{' expressions+=Expression '}'
;

Comment:
  /\*\*.*$/
;